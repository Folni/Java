/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.ArticleManager;
import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.User;
import hr.algebra.utilities.MessageUtils;
import static hr.algebra.utilities.PasswordUtils.hashPassword;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author filip
 */
public class LogInPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogInPanel
     */
    public ArticleManager manager;

    public LogInPanel(ArticleManager manager) {
        this.manager = manager;
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        lbUsernameError = new javax.swing.JLabel();
        lbPasswordError = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1192, 792));

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        jButton1.setText("Log-In");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbUsernameError.setForeground(new java.awt.Color(255, 0, 51));
        lbUsernameError.setText("X");

        lbPasswordError.setForeground(new java.awt.Color(255, 0, 51));
        lbPasswordError.setText("X");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                    .addComponent(tfUsername)
                    .addComponent(pfPassword))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbUsernameError)
                    .addComponent(lbPasswordError))
                .addContainerGap(511, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbUsernameError))
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPasswordError))
                .addGap(90, 90, 90)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(191, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!formValid()) {
            MessageUtils.showErrorMessage("Error", "Incorrect input!");
            return;
        }

        String username = tfUsername.getText();
        char[] passwordChars = pfPassword.getPassword();
        String password = new String(passwordChars);

        try {
            // 1. Get salt for the username
            String salt = repository.getSaltByUsername(username);
            if (salt == null || salt.isEmpty()) {
                MessageUtils.showErrorMessage("Login failed", "User does not exist.");
                return;
            }

            // 2. Hash the input password with retrieved salt
            String hashedPassword = hashPassword(password, salt);

            // 3. Construct a User object with username, hashedPassword, and salt
            User user = new User(username, hashedPassword, salt); // Add this constructor

            // 4. Check user existence
            int userId = repository.checkUser(user);
            if (userId != -1) {
                user.setId(userId); // Optionally track ID
                if(userId == 1){
                    user.setIsAdmin(true);
                    manager.onAuthenticationSuccess(user);
                }else{
                    manager.onAuthenticationSuccess(user);
                }
            } else {
                clearForm();
                MessageUtils.showErrorMessage("Login failed", "Incorrect username or password.");
            }

        } catch (Exception ex) {
            Logger.getLogger(LogInPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Error", "Unexpected error occurred.");
        } finally {
            Arrays.fill(passwordChars, '0'); // Clear password from memory
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private List<JTextComponent> validationFields;
    private List<JLabel> errorLabels;

    private void initValidation() {
        validationFields = Arrays.asList(
                tfUsername,
                pfPassword
        );
        errorLabels = Arrays.asList(
                lbUsernameError,
                lbPasswordError
        );
    }

    private void hideErrors() {
        errorLabels.forEach(e -> e.setVisible(false));
    }

    private boolean formValid() {
        hideErrors();
        boolean ok = true;

        for (int i = 0; i < validationFields.size(); i++) {
            ok &= !validationFields.get(i).getText().trim().isEmpty();
            errorLabels.get(i).setVisible(validationFields.get(i).getText().trim().isEmpty());
        }
        return ok;
    }

    private void init() {
        try {
            initValidation();
            hideErrors();
            initRepository();
        } catch (Exception ex) {
            Logger.getLogger(EditArticlesPanel.class.getName()).log(Level.SEVERE, null, ex);
            MessageUtils.showErrorMessage("Unrecoverable error", "Cannot initiate the form");
            System.exit(1);
        }
    }

    private void clearForm() {
        hideErrors();
        validationFields.forEach(e -> e.setText(""));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbPasswordError;
    private javax.swing.JLabel lbUsernameError;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private Repository repository;

    private void initRepository() throws Exception {
        repository = RepositoryFactory.getRepository();
    }
}
